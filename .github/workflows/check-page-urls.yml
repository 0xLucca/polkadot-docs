name: Check Documentation Changes

on:
  pull_request:
    branches:
      - master  # Only run on PRs targeting master

jobs:
  check-changes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for accurate diff

      - name: Get base commit of the PR
        run: |
          BASE_COMMIT=${{ github.event.pull_request.base.sha }}
          echo "BASE_COMMIT=$BASE_COMMIT" >> $GITHUB_ENV

      - name: Identify deleted and renamed files
        run: |
          DELETED_FILES=$(git diff --name-status $BASE_COMMIT...HEAD | awk '$1 == "D" {print $2}')
          RENAMED_FILES=$(git diff --name-status $BASE_COMMIT...HEAD | awk '$1 == "R" {print $2}')

          echo "DELETED_FILES<<EOF" >> $GITHUB_ENV
          echo "$DELETED_FILES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          echo "RENAMED_FILES<<EOF" >> $GITHUB_ENV
          echo "$RENAMED_FILES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          if [[ -n "$DELETED_FILES" || -n "$RENAMED_FILES" ]]; then
            echo "warning=true" >> $GITHUB_ENV
          fi

      - name: Check for title changes in modified Markdown files
        run: |
          MODIFIED_MD_FILES=$(git diff --name-only $BASE_COMMIT...HEAD -- "*.md")

          # Remove deleted files from the list
          for file in $DELETED_FILES; do
            MODIFIED_MD_FILES=$(echo "$MODIFIED_MD_FILES" | grep -v "^$file$")
          done

          TITLE_CHANGED=false
          TITLE_CHANGES=""

          for file in $MODIFIED_MD_FILES; do
            OLD_TITLE=$(git show $BASE_COMMIT:"$file" | grep -m 1 "^# " || echo "No title found")
            NEW_TITLE=$(grep -m 1 "^# " "$file" || echo "No title found")

            if [[ "$OLD_TITLE" != "$NEW_TITLE" ]]; then
              TITLE_CHANGED=true
              TITLE_CHANGES+="$file\nOld: $OLD_TITLE\nNew: $NEW_TITLE\n\n"
            fi
          done

          echo "TITLE_CHANGES<<EOF" >> $GITHUB_ENV
          echo -e "$TITLE_CHANGES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          if [[ "$TITLE_CHANGED" == "true" ]]; then
            echo "warning=true" >> $GITHUB_ENV
          fi

      - name: Post PR warning if necessary
        if: env.warning == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue_number = context.payload.pull_request.number;
            const repo = context.repo;
            const deletedFiles = `${process.env.DELETED_FILES}`.trim();
            const renamedFiles = `${process.env.RENAMED_FILES}`.trim();
            const titleChanges = `${process.env.TITLE_CHANGES}`.trim();

            let message = `⚠️ **Documentation Warning**\n\n`;
            message += `- Some files were **deleted** or **renamed**.\n`;
            message += `- Some **titles in Markdown files** were modified.\n\n`;

            if (deletedFiles) {
              message += `**Deleted files:**\n\`\`\`\n${deletedFiles}\n\`\`\`\n\n`;
            }
            if (renamedFiles) {
              message += `**Renamed files:**\n\`\`\`\n${renamedFiles}\n\`\`\`\n\n`;
            }
            if (titleChanges) {
              message += `**Files with changed titles:**\n\`\`\`\n${titleChanges}\n\`\`\`\n\n`;
            }

            message += `Please verify these changes carefully before merging.`;

            github.rest.issues.createComment({
              owner: repo.owner,
              repo: repo.repo,
              issue_number: issue_number,
              body: message
            });
